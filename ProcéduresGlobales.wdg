#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : ProcéduresGlobales
 major_version : 26
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1d2ec48707e7d3ba
 internal_properties : BgAAAAYAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes : []
  procedures :
   -
     name : SauveParam
     procedure_id : 2102834267635069884
     type_code : 15
     code : |1+
      PROCEDURE SauveParam()
      
      monSauveParamètre("securité",    gParamApp.securité..Valeur )
      monSauveParamètre("tailleGraine",gParamApp.taillGraine..Valeur )
      monSauveParamètre("entropie",    gParamApp.entropie..Valeur )
      monSauveParamètre("testNet",     gParamApp.bTestNet )
      monSauveParamètre("langueBip39", gParamApp.langueBip39 )
      monSauveParamètre("typeAddr",    gParamApp.typeAddr..valeur  )
      monSauveParamètre("motdepasse",  gParamApp.bAvecMotDePasse  )
      monSauveParamètre("nomimagefond",gParamApp.sNomComplet  )
      monSauveParamètre("typeimage",   gParamApp.typeImage..Valeur  )
      monSauveParamètre("log",  		  gParamApp.bLogEtapes  )
     type : 458752
   -
     name : ChargeParam
     procedure_id : 2103189079185145479
     type_code : 15
     code : |1+
      // rechargemetn des paramètres de génération
      PROCEDURE ChargeParam()
      
      
      gParamApp.securité     	  = EnumérationDepuisValeur( NiveauSécurité, monChargParamètre("securité",      0 ))
      gParamApp.taillGraine  	  = EnumérationDepuisValeur( TailleGraine,   monChargParamètre("TailleGraine",  0 ))
      gParamApp.entropie	   	  = EnumérationDepuisValeur( SourceEntropie, monChargParamètre("entropie",      1 ))
      gParamApp.bTestNet	   	  = monChargParamètre("testNet",      0 )
      gParamApp.langueBip39  	  = monChargParamètre("langueBip39",  nationAnglais )
      gParamApp.typeAddr	   	  = EnumérationDepuisValeur( PortefeuilleHDBip32::typeDérivation, monChargParamètre("typeAddr",      3 ))
      gParamApp.bAvecMotDePasse = monChargParamètre("motdepasse",   0 )
      gParamApp.sNomComplet     = monChargParamètre("nomimagefond",   "" )
      gParamApp.typeImage       = EnumérationDepuisValeur( typeImageFond, monChargParamètre("typeimage",      0 ))
      gParamApp.bLogEtapes      = monChargParamètre("log",   "0" ) = "1"
      
     type : 458752
   -
     name : genèreNouveauCompteDansUnThread
     procedure_id : 2119675993938960597
     type_code : 15
     code : |1-
      // <pfLogDidactique> : pfLogDidactique( etape est EtappeCreationCompte, résultat est chaine )
      procédure genèreNouveauCompteDansUnThread(LOCAL sNom est chaine, local sMotDePasse chaine, _iHasard est ISourceDEntropie, _pjauge champ,  _pfLog est une procédure=null ) : ( booléen, PortefeuilleHDBip32, chaine )
      
      nouveauPortefeuille est PortefeuilleHDBip32
      bOK est un booléen
      sErreur est chaine
      iHasard est ISourceDEntropie <- _iHasard 
      pjauge  est champ 			 <- _pjauge 
      bThreadFini est un booléen   = faux
      pfLog est une procédure       = _pfLog
      	PROCÉDURE INTERNE _T_Generere()
      		(bOK, nouveauPortefeuille, sErreur) = généreUnNouveauCompte(sNom,sMotDePasse,iHasard, pjauge, pfLog)
      		bThreadFini = Vrai
      	FIN
      
      T est chaine = "Thread_Calc_"+ DonneGUID()
      ThreadExécute(T, threadNormal, _T_Generere)
      TANTQUE PAS bThreadFini
      	Multitâche(1)
      FIN
      renvoyer (bOK, nouveauPortefeuille, sErreur)
     type : 458752
   -
     name : généreUnNouveauCompte
     procedure_id : 2119641982067801198
     type_code : 15
     code : |1+
      // crée un nouveau compte
      // renvoie (OK, portefeuille, erreur)
      // <pfLogDidactique>: procédure pour tracer les différentes étapes en mode didactique.
      //  proto : pfLogDidactique( etape est EtappeCreationCompte, résultat est chaine )
      PROCEDURE généreUnNouveauCompte( local sNom est chaine, local sMotDePasse chaine, iHasard est ISourceDEntropie, pjauge champ, pfLog est une procédure=null  ) : ( booléen, PortefeuilleHDBip32, chaine )
      
      // Etapes de jauge
      pjauge = 0
      pjauge..BorneMax = 6
      
      // type de réseau
      nTypeNet est BtcNetwork = BtcNet_Main
      SI gParamApp.bTestNet ALORS
      	// Testnet
      	nTypeNet = BtcNet_Test
      FIN
      // <nOption> : paramètre la taille de la graine : 0 => 128 bits, 1 => 256 bits, 2 => 512 bits
      nOption est un entier = -1 // invalide
      SELON gParamApp.taillGraine
      	CAS graine128Bit : nOption=0
      	CAS graine256Bit : nOption=1
      	CAS graine512Bit : nOption=2
      FIN
      
      
      // => création effective
      nouveauPortefeuille est PortefeuilleHDBip32
      nouveauPortefeuille.CréeNouveauPortefeuille(nTypeNet, portefeuilleBase.HD_BIP32, nOption, sMotDePasse , iHasard, pfLog )
      SI ErreurDétectée ALORS
      //	Erreur()
      //	MaFenêtre..Plan = PLAN_DEBUT
      	REnvoyer (faux, null, ErreurInfo())
      FIN
      // init libellé du compte
      nouveauPortefeuille.m_sNom = sNom
      // --- Etape 1 finie
      pjauge++
      
      // [--- Défensif ---  on vérifie qu'on peut re-crée le portefeuille
      
      // récup phrase a partir de la graine de génération
      listeMot est VariableProtégée = nouveauPortefeuille.getPhraseDeSauvegardeBIP39()
      SI listeMot.bEstVide() ALORS
      	dbgAssertion(faux)
      	RENVOYER (Faux,  Null, "")
      FIN
      // --- Etape 2 finie
      pjauge++
      // recréation a partir de la phrase
      PortefeuilleTest est PortefeuilleHDBip32
      soit (bOK,sErreur) = PortefeuilleTest.InitDepuisPhraseBip39(listeMot,sMotDePasse, nTypeNet)
      SI PAS bOK ALORS
      	RENVOYER (Faux,  Null, sErreur)
      FIN
      // --- Etape 3 finie
      pjauge++
      
      // ---- Fin partie défensive ---------------]
      
      // Récup de l'adresse principale pour que le temps soit pris ici.
      clAddressePrincipale est Adresse <- nouveauPortefeuille.getAdressePubliqueNumero( 1, gParamApp.typeAddr, pfLog )
      //+ Vérif que adresse OK
      SI  clAddressePrincipale.bEstvide() ALORS
      	RENVOYER (Faux,  Null, "echec de récupération de l'addrese")
      FIN
      
      // --- Etape 4 finie
      pjauge++
      
      // choisir une image de fond
      nouveauPortefeuille.m_image = FEN_Principale.choisiImageFondCompte()
      // --- Etape 5 finie
      pjauge++
      
      // succes
      renvoyer (vrai, nouveauPortefeuille, "")
      
     type : 458752
   -
     name : monSauveParamètre
     procedure_id : 2200456069548718834
     type_code : 15
     code : |1-
      PROCEDURE monSauveParamètre( clé chaine, local valeur chaine )
      
      <COMPILE SI Configuration<>"Exécutable Linux 64 bits">
      	SauveParamètre(clé, valeur)
      <SINON>
      	INIEcrit("MAIN",clé,valeur,"param.conf" )
      <fIN>
      
      	
     type : 458752
   -
     name : monChargParamètre
     procedure_id : 2200456511930387551
     type_code : 15
     code : |1-
      procédure monChargParamètre( clé chaine, local valeurPArdéfaut chaine="" ) : chaine
      
      <COMPILE SI Configuration<>"Exécutable Linux 64 bits">
      	renvoyer ChargeParamètre(clé, valeurPArdéfaut)
      <SINON>
      	renvoyer INILit("MAIN",clé,valeurPArdéfaut,"param.conf" )
      <FIN>
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BgAAAAYAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : ProcéduresGlobales1
resources :
 string_res :
  identifier : 0x1dae920b58edf768
  internal_properties : BgAAAAYAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
  strings :
   -
     text :
      fr-FR : "Erreur interne : Adresse vide"
      en-GB : "Erreur interne : Adresse vide"
      es-ES : "Erreur interne : Adresse vide"
      ar-SA : "Erreur interne : Adresse vide"
     index : 0
   -
     text :
      fr-FR : "Erreur interne : échec de récupérer l'adresse publique 1"
      en-GB : "Erreur interne : échec de récupérer l'adresse publique 1"
      es-ES : "Erreur interne : échec de récupérer l'adresse publique 1"
      ar-SA : "Erreur interne : échec de récupérer l'adresse publique 1"
     index : 1
custom_note :
 internal_properties : BgAAAAYAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
