#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : procPourSecret
 major_version : 26
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1dae958828549511
 internal_properties : BgAAAAYAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1-
      
      GLOBAL
      // procédure par défaut si on en donne aucune
      gpfDonneClé_parDéfaut   est une Procédure 
     type : 720896
  procedures :
   -
     name : pGetProcCléParDéfaut
     procedure_id : 2138812148361635541
     type_code : 15
     code : |1-
      // renvoie un procédure utilisable pour renvoyer une clé de décryptage
      // correctement protégée par défaut.
      procédure pGetProcCléParDéfaut() : procédure
      
      // init au 1er appel
      si gpfDonneClé_parDéfaut=null ALORS
      	gpfDonneClé_parDéfaut = _pGetProcDonneClé_parDéfaut()
      FIN
      
      renvoyer gpfDonneClé_parDéfaut
     type : 458752
   -
     name : _pGetProcDonneClé_parDéfaut
     procedure_id : 2138812247145907083
     type_code : 15
     code : |1-
      Procédure privée _pGetProcDonneClé_parDéfaut() : procédure
      // closure
      ProcLocale est une procédure = pGetProcRenvoieSecret256bits()
      	Procédure interne  _pGetClé() : chaine
      		// récupérér le secret dans un buffer de 32 octets = 256 bits
      		sSecret est un buffer = Répète("x",32)
      		ProcLocale( sSecret)
      		renvoyer sSecret
      	fin
      
      renvoyer _pGetClé
     type : 458752
   -
     name : _pGetProcRenvoieSecret32bits
     procedure_id : 2138811418216304653
     type_code : 15
     code : |1+
      // renvoie un procédure qui renvoie un nombre secret conservé uniquement par le le kernel.
      // ainsi en cas de dump cette valeur n'est disponible nulle part
      // il est nécessaire de ré-exécuter le code ou d'etre root sur toute la machine
      // proto :
      //   litSecretI4( pBufferPourSecret est entier systeme ) // affecte 4 octets de pBufferPourSecret
      // faire nSecretI4 = 0 des qu'on a plus besoin de <nSecretI4>
      PROCÉDURE GLOBALE privee _pGetProcRenvoieSecret32bits() : Procédure
      
      KERNEL est chaîne UNICODE = "Kernel32.dll"
      
      // crée un thread et récupère son TID
      TID est entier sans signe sur 4 octets
      hKernel est un entier système = API(KERNEL, "GetModuleHandleW", KERNEL)
      dbgAssertion(hKernel<>0)
      // récup de l'adresse d'un procédure a 0 paramètres
      Proc0Param est un entier système = API(KERNEL,"GetProcAddress",hKernel,"GetCurrentThreadId")
      // créer un thread en mode attente
      // CREATE_SUSPENDED 0x00000004
      HThread est un entier système = API(KERNEL,"CreateThread",Null, 4096, Proc0Param, 0, 0x00000004, &TID)
      dbgAssertion(HThread<>0)
      dbgAssertion(TID<>0)
      
      // Génère un nombre secrets
      SECRET_I4 est entier sur 4
      SECRET_buffer est chaîne fixe sur 4 =  HasardCryptoBuffer(4)
      Transfert(&SECRET_I4,&SECRET_buffer,4)
      VariableProtégée::DetruitSecret(SECRET_buffer)
      dbgAssertion(SECRET_buffer[[1]]=Caract(0))
      
      // met le secret comme valeur de HThread
      API("Kernel32" ,"TerminateThread", HThread, SECRET_I4)
      //ThreadArrête(sNomThread,1)
      //API("Kernel32" ,"TerminateThread", HThread, SECRET_I4)
      // détruit le secret de a mémoire du process
      // apres ce code le seul pmoyen d'obtenir cette valeur et de demander au système la valeur de retour
      SECRET_I4= 0
      // attends que le thread soit bien terminé
      //ThreadPause(1)
      
      // =============================================================================================
      	// => valeur de retour = fonction qui renvoie le secret.
      	PROCÉDURE INTERNE _litSecret32Bits(pBufferPourSecret est entier système) 
      	dbgAssertion(HThread<>0)
      	bOK est un booléen = API("Kernel32" ,"GetExitCodeThread", HThread, pBufferPourSecret )
      	dbgAssertion(bOK, ErreurInfo(errMessageSystème)) 
      	FIN
      
      // teminé :
      RENVOYER _litSecret32Bits
      
     type : 458752
   -
     name : pGetProcRenvoieSecret256bits
     procedure_id : 2138811731749710610
     type_code : 15
     code : |1+
      PROCÉDURE GLOBALE pGetProcRenvoieSecret256bits() : Procédure
      
      // 8 procédures pour 32 bits chacune
      TabProcedure est un tableau de 8 procédures
      pour i = 1 a 8
      	// crée 32 bits du secret
      	TabProcedure[i] = _pGetProcRenvoieSecret32bits()
      FIN
      // protection supplémentaire pour le cas ou un attaquant aurait acces a la mémoire du kernel
      // on rend sa tache plus difficile (mais pas impossible)
      TableauMélange(TabProcedure)
      
      
      	PROCÉDURE INTERNE _litSecret256Bits(bufPourSecret est un buffer)
      		dbgAssertion( taille(bufPourSecret) = 4*8 )
      		pBufferPourSecret est entier systeme = &bufPourSecret
      		POUR i = 1 a 8
      			// récup de 32 bits du secret
      			pI est une procédure <- TabProcedure[i]
      			pI( pBufferPourSecret  + (i-1)*4   )
      		fin
      	FIN
      
      renvoyer _litSecret256Bits
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BgAAAAYAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : ProcéduresGlobales1
resources :
 string_res :
  identifier : 0x1dae956a28521fc1
  internal_properties : BgAAAAYAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BgAAAAYAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
